// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// Delaunay_Tri_2D
List Delaunay_Tri_2D(const NumericMatrix& data, const NumericVector& bCoord);
RcppExport SEXP _CGALTri_Delaunay_Tri_2D(SEXP dataSEXP, SEXP bCoordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type bCoord(bCoordSEXP);
    rcpp_result_gen = Rcpp::wrap(Delaunay_Tri_2D(data, bCoord));
    return rcpp_result_gen;
END_RCPP
}
// Regular_Tri_2D
List Regular_Tri_2D(const NumericMatrix& data, const NumericVector& bCoord);
RcppExport SEXP _CGALTri_Regular_Tri_2D(SEXP dataSEXP, SEXP bCoordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix& >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type bCoord(bCoordSEXP);
    rcpp_result_gen = Rcpp::wrap(Regular_Tri_2D(data, bCoord));
    return rcpp_result_gen;
END_RCPP
}
// test_tri
int test_tri(NumericMatrix data);
RcppExport SEXP _CGALTri_test_tri(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(test_tri(data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_CGALTri_Delaunay_Tri_2D", (DL_FUNC) &_CGALTri_Delaunay_Tri_2D, 2},
    {"_CGALTri_Regular_Tri_2D", (DL_FUNC) &_CGALTri_Regular_Tri_2D, 2},
    {"_CGALTri_test_tri", (DL_FUNC) &_CGALTri_test_tri, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_CGALTri(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
